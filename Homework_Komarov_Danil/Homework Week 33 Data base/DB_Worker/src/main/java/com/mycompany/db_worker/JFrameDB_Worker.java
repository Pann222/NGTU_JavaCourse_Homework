/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.db_worker;

import java.sql.*;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Dan20
 */
public class JFrameDB_Worker extends javax.swing.JFrame {

    /**
     * Creates new form JFrameDB_Worker
     */
    public JFrameDB_Worker() {
        initComponents();
        
        
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldAdd_name = new javax.swing.JTextField();
        jTextFieldAdd_id = new javax.swing.JTextField();
        jTextFieldAdd_price = new javax.swing.JTextField();
        jButtonAddNewItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldShowInfo_id = new javax.swing.JTextField();
        jButtonShowInfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldAdd_name.setText("Name");
        jTextFieldAdd_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldAdd_nameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldAdd_nameMouseExited(evt);
            }
        });

        jTextFieldAdd_id.setText("id");
        jTextFieldAdd_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldAdd_idMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldAdd_idMouseExited(evt);
            }
        });

        jTextFieldAdd_price.setText("Price");
        jTextFieldAdd_price.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldAdd_priceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldAdd_priceMouseExited(evt);
            }
        });

        jButtonAddNewItem.setText("Add new item");
        jButtonAddNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddNewItemActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(250, 250, 250));
        jLabel1.setText("123");

        jTextFieldShowInfo_id.setText("id");
        jTextFieldShowInfo_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldShowInfo_idMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldShowInfo_idMouseExited(evt);
            }
        });

        jButtonShowInfo.setText("Show info");
        jButtonShowInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonShowInfo)
                    .addComponent(jTextFieldShowInfo_id, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldAdd_id, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldAdd_name, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldAdd_price, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonAddNewItem)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAdd_id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldAdd_name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldAdd_price, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButtonAddNewItem)
                .addGap(47, 47, 47)
                .addComponent(jTextFieldShowInfo_id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonShowInfo)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddNewItemActionPerformed
        try {
            addNewItem(jTextFieldAdd_id.getText(),jTextFieldAdd_name.getText(),jTextFieldAdd_price.getText());
        } catch (SQLException ex) {
            Logger.getLogger(JFrameDB_Worker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAddNewItemActionPerformed
    
    private void jTextFieldAdd_nameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAdd_nameMouseExited
        if ("".equals(jTextFieldAdd_name.getText())){
            jTextFieldAdd_name.setText("Name"); 
        }
    }//GEN-LAST:event_jTextFieldAdd_nameMouseExited

    private void jTextFieldAdd_priceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAdd_priceMouseExited
        if ("".equals(jTextFieldAdd_price.getText())){
            jTextFieldAdd_price.setText("Price"); 
        }
    }//GEN-LAST:event_jTextFieldAdd_priceMouseExited

    private void jTextFieldShowInfo_idMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldShowInfo_idMouseEntered
        if ("id".equals(jTextFieldShowInfo_id.getText())){
            jTextFieldShowInfo_id.setText(""); 
        }
    }//GEN-LAST:event_jTextFieldShowInfo_idMouseEntered

    private void jTextFieldShowInfo_idMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldShowInfo_idMouseExited
         if ("".equals(jTextFieldShowInfo_id.getText())){
            jTextFieldShowInfo_id.setText("id"); 
        }
    }//GEN-LAST:event_jTextFieldShowInfo_idMouseExited

    private void jButtonShowInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowInfoActionPerformed
        showInfoById(jTextFieldShowInfo_id.getText());
    }//GEN-LAST:event_jButtonShowInfoActionPerformed

    private void jTextFieldAdd_idMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAdd_idMouseEntered
        if ("id".equals(jTextFieldAdd_id.getText())){
            jTextFieldAdd_id.setText("");
        }
    }//GEN-LAST:event_jTextFieldAdd_idMouseEntered

    private void jTextFieldAdd_idMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAdd_idMouseExited
        if ("".equals(jTextFieldAdd_id.getText())){
            jTextFieldAdd_id.setText("id");
        }
    }//GEN-LAST:event_jTextFieldAdd_idMouseExited

    private void jTextFieldAdd_priceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAdd_priceMouseEntered
        if ("Price".equals(jTextFieldAdd_price.getText())){
            jTextFieldAdd_price.setText("");
        }
    }//GEN-LAST:event_jTextFieldAdd_priceMouseEntered

    private void jTextFieldAdd_nameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAdd_nameMouseEntered
        if ("Name".equals(jTextFieldAdd_name.getText())){
            jTextFieldAdd_name.setText("");
        }
    }//GEN-LAST:event_jTextFieldAdd_nameMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameDB_Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameDB_Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameDB_Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameDB_Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameDB_Worker().setVisible(true);
            }
        });
    }
    public void addNewItem (String strId, String name, String strPrice) throws SQLException{
        Integer id = null;
        try{
            id = Integer.parseInt(strId);
        } catch(NumberFormatException ex) {
            int answer = JOptionPane.showConfirmDialog(this, "Incorrect id. Id will be created automatically."
                    + " Do you agree with this?","Eror",JOptionPane.YES_NO_OPTION);
            Connection con1 = DriverManager.getConnection(urlStr,"postgres", "qwerty1234");
            Statement statm1 = con1.createStatement();
            if(answer==0){
                ResultSet rs1 = statm1.executeQuery("SELECT max(id) FROM product_range_table;");
                while(rs1.next()){
                    id = rs1.getInt(1) +1;
                }
                rs1.close();
                con1.close();
                statm1.close();
            } else {return;}
        }
        if(name == null){
            JOptionPane.showMessageDialog(this, "Name cannot be empty!","Eror",JOptionPane.ERROR_MESSAGE);
        } else if(strPrice == null||isNumeric(strPrice)==false) {
            JOptionPane.showMessageDialog(this, "Incorrect price.","Eror",JOptionPane.ERROR_MESSAGE);    
        } else {
        Connection con2 = null;
        con2 = DriverManager.getConnection(urlStr,"postgres", "qwerty1234");
        Statement statm2 = con2.createStatement();  
        name = "'"+name+"'";
        try{
        statm2.executeUpdate("insert into product_range_table values("+id+","+name+","+strPrice+");");
        con2.close();
        statm2.close();
        } catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Incorrect insert info.","Eror",JOptionPane.ERROR_MESSAGE);
        }
        con2.close();
        statm2.close();   
        }
    }
    public void showInfoById (String id){
        if (id==null||isNumeric(id)==false){
          JOptionPane.showMessageDialog(this, "Incorrect id.","Error.",JOptionPane.ERROR_MESSAGE);  
        } else {
            try {
                Connection con1 = null;
                con1 = DriverManager.getConnection(urlStr,"postgres", "qwerty1234");
                Statement statm1 = con1.createStatement();
                Statement statm2 = con1.createStatement();
                ResultSet rsName = statm1.executeQuery("SELECT name FROM product_range_table WHERE id="+ id +";");
                ResultSet rsPrice = statm2.executeQuery("SELECT price FROM product_range_table WHERE id="+ id +";");
                String name = null, price = null;
               
                while(rsName.next()& rsPrice.next()){
      
                    name = rsName.getString("name");
                    System.out.println(name);
                    price = rsPrice.getString("price");
                    
                } 
 
                if (rsName.next()==false){
                    jLabel1.setText("There are no items with this id.");
                }
                
                jLabel1.setText("id: "+" \""+id+"\""+ ";    "+" Name: "+ "\"" +name+"\""+";    "+"Price: "+" "+" \""+price+"\""+".");
                
                rsName.close();
                rsPrice.close();
                con1.close();
                statm1.close();
                statm2.close(); 
            } catch (SQLException ex) {
                Logger.getLogger(JFrameDB_Worker.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
    public static boolean isNumeric(String str) { 
        try {  
          Integer.parseInt(str);  
          return true;
          
        } catch(NumberFormatException e){
          return false;  
        }  
    }
    
  
  
    private final String urlStr = "jdbc:postgresql://localhost:5432/test_db";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddNewItem;
    private javax.swing.JButton jButtonShowInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldAdd_id;
    private javax.swing.JTextField jTextFieldAdd_name;
    private javax.swing.JTextField jTextFieldAdd_price;
    private javax.swing.JTextField jTextFieldShowInfo_id;
    // End of variables declaration//GEN-END:variables
}
